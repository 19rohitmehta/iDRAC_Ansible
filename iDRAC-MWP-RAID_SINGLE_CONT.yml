---
##################################################################################
#
# NAME : RAID-1 Configuration on Dell Power Edge R740/R640 servers
# TASK : Configure the RAID-1 using first two disks and make rest of DISK as ready.
# Server : Dell R740/R640
# MWP Version : 21.4.1
# Playbook Version : 1.0
# Playbook Owner : Mavenir MWP Platform CoD
# Playbook Author : Rohit Mehta
# Reviewed by : Hemant Patel
# Approved by : Manish Sharma
#
##################################################################################

- gather_facts: false
  name: RAID-1 Configuration on Dell Power Edge R740/R640 servers
  hosts: idrac_hosts
  user: root
  become: yes
  vars:
    RAID_CONT: RAID.Slot.5-1

  vars_prompt:
    name: "confirmation"
    prompt: "Are you sure you want to run this playbook? Answer with 'YES'"
    default: "NO"
    private: no

  tasks:

    - debug: 
        msg: iDRAC IP is {{ ansible_ssh_host }}

    - name: Check Confirmation
      fail: msg="Playbook run confirmation failed"
      when: confirmation != "YES"

    - name: Please Verify iDRAC IPs in above list as per Host Inventory file before continuing 
      pause:
        minutes: 100000

    - name: Clear All the Jobs
      raw: racadm jobqueue delete --all
      register: result_jobqueue
    - debug: var=result_jobqueue.stdout_lines

    - name: Reset RAID Controller
      raw: racadm raid resetconfig:{{RAID_CONT}}
      register: raidreset_status
    - debug: var=raidreset_status.stdout_lines

    - name: Create a Job for RAID Controller Reset
      raw: racadm jobqueue create {{RAID_CONT}}
      register: jobqueue
    - debug: var=jobqueue.stdout_lines

    - name: Powercycle the server to execute the job for RAID Controller Reset
      raw: racadm serveraction powercycle
      register: server_reboot
      when: jobqueue != ''
    - debug: var=server_reboot.stdout_lines

    - name: Wait for RAID Controller Reset job to be completed
      raw: racadm jobqueue view
      register: jobstatus
      until: jobstatus.stdout.find("Running") <= 0 and jobstatus.stdout.find("scheduled") <= 0 and jobstatus.stdout.find("New") <= 0
      retries: 20
      delay: 30
      when: '"Server power operation initiated successfully" in server_reboot.stdout_lines'
    - debug: var=jobstatus.stdout_lines

    - name: Convert NON RAID disk to Ready
      raw: storage converttoraid:{{item}}:Enclosure.Internal.0-1:{{RAID_CONT}}
      with_items:
      - "Disk.Bay.0"
      - "Disk.Bay.1"
      - "Disk.Bay.2"
      - "Disk.Bay.3"
      - "Disk.Bay.4"
      - "Disk.Bay.5"

    - name: Create a Job - NON RAID disk to Ready
      raw: racadm jobqueue create {{RAID_CONT}}
      register: jobqueue
    - debug: var=jobqueue.stdout_lines

    - name: Powercycle the server to NON RAID disk to Ready
      raw: racadm serveraction powercycle
      register: server_reboot
      when: jobqueue != ''
    - debug: var=server_reboot.stdout_lines

    - name: Wait for  NON RAID disk to Ready job to be completed
      raw: racadm jobqueue view
      register: jobstatus
      until: jobstatus.stdout.find("Running") <= 0 and jobstatus.stdout.find("scheduled") <= 0 and jobstatus.stdout.find("New") <= 0
      retries: 20
      delay: 30
      when: '"Server power operation initiated successfully" in server_reboot.stdout_lines'
    - debug: var=jobstatus.stdout_lines
 
    - name: Setup Hardware RAID-1 across first two disks
      raw: racadm storage createvd:{{RAID_CONT}} -rl r1 -wp wb -rp ra -name OS -pdkey:Disk.Bay.0:Enclosure.Internal.0-1:{{RAID_CONT}},Disk.Bay.1:Enclosure.Internal.0-1:{{RAID_CONT}}
      register: vdisk_raid1_status
    - debug: var=vdisk_raid1_status.stdout_lines

    - name: Create a Job RAID-1
      raw: racadm jobqueue create {{RAID_CONT}}
      register: jobqueue
    - debug: var=jobqueue.stdout_lines

    - name: Powercycle the server to execute the job for RAID-1
      raw: racadm serveraction powercycle
      register: server_reboot
      when: jobqueue != ''
    - debug: var=server_reboot.stdout_lines

    - name: Wait for Hardware RAID-1 job to be completed
      raw: racadm jobqueue view
      register: jobstatus
      until: jobstatus.stdout.find("Running") <= 0 and jobstatus.stdout.find("scheduled") <= 0 and jobstatus.stdout.find("New") <= 0
      retries: 20
      delay: 30
      when: '"Server power operation initiated successfully" in server_reboot.stdout_lines'
    - debug: var=jobstatus.stdout_lines

    - name: Clear All the Jobs
      raw: racadm jobqueue delete --all
      register: result_jobqueue
    - debug: var=result_jobqueue.stdout_lines

    - name: Wait for 2 Minute to get PDISK and VDISK status
      pause:
        minutes: 2

    - name: Checking pdisks status
      raw: storage get pdisks -o -p Status,State,MediaType,Size
      register: pdisks_status
    - debug: var=pdisks_status.stdout_lines

    - name: Checking vdisks status
      raw: storage get vdisks -o -p Status,State,Layout,Size,MediaType
      register: vdisks_status
    - debug: var=vdisks_status.stdout_lines
